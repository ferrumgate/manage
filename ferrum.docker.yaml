version: "3.9"
services:
  redis: 
    image: redis:latest
    restart: always
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
      restart_policy:
        delay: 5s
    networks:
      - ferrum
      - ferrum2

  server:
    image: _PRIVATE_REGISTRY/ferrumgate/secure.server:1.0.0
    restart: always
    ports:
      - '9999:9999'
    environment:
      - REDIS_HOST=redis#6379
      - LOGIN_URL=http://192.168.88.51/login  #_LOGIN_URL
      - PORT=9999
    cap_add:
      - NET_ADMIN
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    volumes:
      - /dev/net/tun:/dev/net/tun
    networks:
      - ferrum

  admin:
    image: nginx:1.23-alpine
    restart: always
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    networks:
      - outside



  ui:
    image: _PRIVATE_REGISTRY/ferrumgate/ui.portal:1.0.0
    restart: always
    deploy:
      restart_policy:
        delay: 5s
    networks:
      - ferrum

  rest:
    image: _PRIVATE_REGISTRY/ferrumgate/rest.portal:1.0.0
    restart: always
    environment:
      - PORT=8181
      - REDIS_HOST=redis:6379
      - BASE_RATE_LIMIT=25
      - ENCRYPT_KEY=rktIuxHZLZXXRFFrPtTLxYHyFWZcsoef
    deploy:
      restart_policy:
        delay: 5s
    volumes:
      - /etc/ferrumgate:/etc/ferrumgate
    networks:
      - ferrum

  nginx:
    image: nginx:1.23-alpine
    restart: always
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        delay: 5s
    configs:
      - source: nginx_config
        target: /etc/nginx/conf.d/default.conf
    networks:
      - ferrum
  

configs:
  nginx_config:
    file: ./conf/nginx.conf
  

networks:
  ferrum:
    external:
      name: ferrum
  outside:
    external:
      name: host
  ferrum2:
    external:
      name: ferrum2

    
  