{
    "Service Temporarily Unavailable": "Service Temporarily Unavailable",
    "Bad Gateway": "Bad Gateway",
    "Gateway Timeout": "Gateway Timeout",
    "ErrNotAuthorized": "Not authorized",
    "ErrApiKeyIsNotValid": "Api key is not valid",
    "ErrBadArgument": "Bad argument",
    "ErrNotFound": "Not found",
    "ErrInternalError": "Internal error",
    "ErrNotEnoughRight": "Not enought right",
    "ErrTooManyRequests": "Too many requests",
    "ErrPasswordPolicy": "Password policy does not match",
    "ErrEmailIsInvalid": "Email is invalid",
    "ErrCaptchaRequired": "Captcha required",
    "ErrJWTVerifyFailed": "JWT verify failed",
    "ErrUserLockedOrNotVerified": "User locked or not verified",
    "Test": "Ferrum",
    "Title": "FerrumGate Management",
    "White": "White",
    "Dark": "Dark",
    "SignIn": "Sign in",
    "SignOut": "Sign out",
    "ForgotPassword": "Forgot password",
    "DontHaveAnAccount": "Don't have an account",
    "Register": "Register",
    "Username": "Username",
    "Password": "Password",
    "PasswordAgain": "Password Again",
    "Email": "Email",
    "EmailOrUsername": "Email or username",
    "EmailRequired": "Email is required",
    "EmailOrUsernameRequired": "Email or username is required",
    "EmailInvalid": "Invalid email",
    "EmailOrUsernameInvalid": "Invalid email or username",
    "PasswordRequired": "Password is required",
    "PasswordMinLength": "Password length must be at least 8 character",
    "PasswordPattern": "Password must have at least 1 number, 1 lowercase, 1 uppercase",
    "PasswordsMismatch": "Passwords must be same",
    "PasswordInvalid": "Password length must be at least 8 character,must have at least 1 number, 1 lowercase, 1 uppercase",
    "PasswordAgainRequired": "Password is required",
    "PasswordAgainMinLength": "Password length must be at least 8 character",
    "PasswordAgainPattern": "Password must have at least 1 number, 1 lowercase, 1 uppercase",
    "FormIsInvalid": "Form is invalid",
    "SuccessfullyRegistered": "Successfully registered, please check your email for confirm",
    "EmailConfirmedSuccessfully": "Email confirmed successfully, please wait redirecting login",
    "WaitBeforeConfirmingYourEmail": "Wait before confirming your email",
    "Retry": "Retry",
    "Token": "Token",
    "2FA": "2FA",
    "SuccessfullyChangedPassword": "Successfully changed password",
    "Change": "Change",
    "SendEmail": "Send email",
    "SuccessfullySendedEmail": "Successfully sended email, please check your email",
    "ResetPassword": "Reset password",
    "Settings": "Settings",
    "Dashboard": "Dashboard",
    "ApiKey": "Api Key",
    "Logs": "Logs",
    "Manage": "Manage",
    "Use": "Use",
    "TwoFAToken": "2FA token",
    "Redirecting": "Redirecting",
    "PleaseWait": "Please wait",
    "Configuration": "Configuration",
    "Configure": "Configure",
    "Next": "Next",
    "Back": "Back",
    "DomainRequired": "Domain required",
    "DomainInvalid": "Domain is invalid",
    "UrlRequired": "Url required",
    "UrlInvalid": "Url is invalid",
    "ClientNetworkRequired": "Client network required",
    "ClientNetworkInvalid": "Client network is invalid",
    "ServiceNetworkRequired": "Service network required",
    "ServiceNetworkInvalid": "Service network is invalid",
    "SshHostRequired": "SSH Tunnel server required",
    "SshHostInvalid": "SSH Tunnel server is invalid",
    "ServiceNetwork": "Service network",
    "ClientNetwork": "Client network",
    "SshHost": "SSH Tunnel Server",
    "Url": "Url",
    "Domain": "Domain",
    "Summary": "Summary",
    "Done": "Done",
    "ServiceNetworkDefinition": "Services will have ip from this range",
    "ServiceIpRange": "Service ip range",
    "ClientNetworkDefinition": "Clients will have ip from this range",
    "ClientIpRange": "Client ip range",
    "SshHostDefinition": "Clients will create tunnels over this host",
    "Network": "Network",
    "UrlDefinition": "Login host url that all clients will login,like https://secure.ferrumgate.com",
    "LoginUrl": "Login url",
    "PrivateDomainDefinition": "Local domain name like ferrumgate.local for services like mysql.dev.ferrumgate.local",
    "PrivateDomain": "Private domain",
    "RandomPasswordDefinition": "Random password generated, you can use it",
    "DefaultUsernameChangeDefinition": "Default username will be changed to this, no confirm email will be sent",
    "AdminUser": "Admin User",
    "SuccessfullyConfigured": "Successfully configured",
    "NameRequired": "Name required",
    "Confirm": "Confirm",
    "DoYouWantToDelete": "Do you want to delete",
    "DoYouWantToSave": "Do you want to save",
    "SuccessfullySaved": "Saved successfully",
    "SuccessfullyDeleted": "Deleted successfully",
    "NewLabel": "New label...",
    "Label": "Label",
    "Labels": "Labels",
    "SelectANetwork": "Select a network",
    "BindedNetwork": "Binded network",
    "GatewayIdHint": "/etc/ferrumgate/conf on gateway",
    "Enabled": "Enabled",
    "Enable": "Enable",
    "Disabled": "Disabled",
    "Disable": "Disable",
    "CancelChanges": "Cancel changes",
    "SaveChanges": "Save changes",
    "Delete": "Delete",
    "Gateway": "Gateway",
    "Gateways": "Gateways",
    "NetworkName": "Network name",
    "Networks": "Networks",
    "Search": "Search",
    "Add": "Add",
    "NotJoinedGateways": "Not Joined Gateways(For activating bind them to a network)",
    "Common": "Common",
    "Captcha": "Captcha",
    "ServerKey": "Server key",
    "ClientKey": "Client key",
    "CaptchaServerKeyHint": "Google Captcha server key",
    "CaptchaClientKeyHint": "Google Captcha client key",
    "Help": "Help",
    "EmailUserHint": "Username or email address",
    "EmailEmailHint": "Email address",
    "EmailPassHint": "Email or app password",
    "EmailSendedSuccessfully": "Email sended successfully",
    "CouldNotSendEmail": "Could not send email",
    "DoYouWantSendEmail": "Do you want to send email",
    "EmailTo": "Send email to this address",
    "Send": "Send",
    "PleaseCheckYourEmail": "Please check your email",
    "EmailSendedSuccessfullyPleaseCheckYourEmail": "Email sended successfully, please check your email",
    "SelectProvider": "Select provider",
    "EmailProvider": "Email provider",
    "Host": "Host",
    "HostRequired": "Host required",
    "Port": "Port",
    "PortRequired": "Port required",
    "EmailHostHint": "Smtp host",
    "EmailPortHint": "Smtp port",
    "TLS": "TLS",
    "User": "User",
    "IsForgotPasswordEnabled": "Forgot password enabled",
    "IsRegisterEnabled": "Register enabled",
    "Authentication": "Authentication",
    "ClientId": "Client id",
    "ClientSecret": "Client secret",
    "OAuthClientIdHint": "Client id for authentication",
    "OAuthClientKeyHint": "Client secret key for authentication",
    "ClientIdRequired": "Client id required",
    "ClientSecretRequired": "Client secret key required",
    "AllreadyExists": "Allready exists",
    "LdapHostHint": "Ldap server",
    "LdapBindDN": "Bind DN",
    "LdapBindDNHint": "Read only administrator",
    "LdapBindPass": "Bind pass",
    "LdapBindPassHint": "Read only administrator password",
    "LdapSearchPath": "Search path",
    "LdapUsernameField": "Username field",
    "LdapUsernameFieldHint": "Ldap object username field like sAMAccountName",
    "LdapGroupnameField": "Groupname field",
    "LdapGroupnameFieldHint": "Ldap object groupname field like memberOf",
    "AllowedGroups": "Allowed groups",
    "LdapAlloweGroupsHint": "If not empty then only these groups members will authenticate",
    "LdapBindSearchPathHint": "User search path",
    "NewGroup": "New group...",
    "BindDNRequired": "Bind DN required",
    "BindPassRequired": "Bind password required",
    "UserSearchBasePathRequired": "User search path required",
    "UsernameFieldRequired": "Username field name required",
    "GroupnameFieldRequired": "Groupname field name required",
    "IssuerRequired": "Issuer required",
    "CertRequired": "Cert required",
    "LoginUrlRequired": "Login url required",
    "NameFieldRequired": "Name field required",
    "LoginUrlHint": "Login url for authentication",
    "Issuer": "Issuer",
    "IssuerHint": "Issuer definition",
    "Cert": "Certificate",
    "Certificate": "Certificate for authentication",
    "UsernameField": "Username field",
    "UsernameFieldHint": "Username property name on object",
    "NameField": "Name field",
    "NameFieldHint": "Name property name on object",
    "Groups": "Groups",
    "Users": "Users",
    "Verified": "Verified",
    "Locked": "Locked",
    "EmailVerified": "Email verified",
    "None": "None",
    "Yes": "Yes",
    "No": "No",
    "UsersSearchHint": "Search by name, username, email,labels, source with above",
    "GroupsSearchHint": "Search by name, labels",
    "NetworksSearchHint": "Search by name, labels, serviceNetwork, clientNetwork",
    "Details": "Details",
    "UserNameSurnameHint": "User name surname",
    "UserEmailHint": "User extra email address if username is not email this will be used for sending email,not used for login",
    "Service": "Service",
    "TcpPort": "Tcp port",
    "UdpPort": "Udp port",
    "ServiceHostHint": "Connect to this hostname or ip",
    "ServiceTcpPort": "Connect to this tcp port",
    "ServiceUdpPort": "Connect to this udp port",
    "Services": "Services",
    "ServicesSearchHint": "Search by name, labels, host, ports",
    "ServiceName": "Service name",
    "InvalidHost": "Host is invalid",
    "TcpRequired": "Tcp required",
    "UdpRequired": "Udp requred",
    "InvalidPort": "Invalid port",
    "RequiredTcpOrUdpPort": "Tcp or udp port required",
    "NetworkRequired": "Network required",
    "Access": "Access",
    "PolicyAuthzHint": "Accessing to services, depends on {first match first execute} otherwise DENY request (means if matches any then ALLOW else DENY)",
    "ServiceRequired": "Service required",
    "TargetService": "Target service",
    "SelectAService": "Select a service",
    "UsersOrGroups": "Users or groups",
    "Authorization": "Authorization",
    "PolicyAuthorizationSearchHint": "Search by network name,service name, rule name, username, group name",
    "PolicyAuthenticationSearchHint": "Search by network name,rule name, username, group name, ip, location",
    "PolicyAuthnHint": "Accessing to networks, depends on {first match first execute} otherwise DENY request (means if matches any rule then execute action (allow,deny) else DENY is default policy)",
    "Allow": "Allow",
    "Deny": "Deny",
    "Ip": "Ip",
    "Ips": "Ips",
    "IpOrNewtorkHint": "Ip or network cidr",
    "IpsOrNewtork": "Ips or Network",
    "NewIpOrNetwork": "New ip or network",
    "Reorder": "Reorder",
    "PleaseSaveFirst": "Please save first",
    "Audit": "Audit",
    "AuditLogsSearchHint": "Search by username, audit type, id or something else",
    "StartDate": "Start date",
    "EndDate": "End date",
    "InsertDate": "Insert date",
    "Message": "Message",
    "Detail": "Detail",
    "ClientIp": "Client ip",
    "ActivityLogsSearchHint": "Search by anything",
    "Activity": "Activity",
    "AssignedIp": "Assigned ip",
    "AssignedIpHint": "Service ip that you can ping",
    "TotalNetworks": "Total networks",
    "TotalNetworksCount": "Total networks count",
    "TotalGateways": "Total gateways",
    "TotalGatewaysCount": "Total gateways count",
    "TotalGroupsCount": "Total groups count",
    "TotalUsersCount": "Total users count",
    "TotalServicesCount": "Total services count",
    "TotalPolicyAuthnCount": "Total Authentication rules count",
    "TotalPolicyAuthzCount": "Total Authorization rules count",
    "TotalActiveSessionsCount": "Total active sessions count",
    "TotalActiveTunnelsCount": "Total active tunnels count",
    "Active": "Active",
    "Last7Days": "Last 7 days",
    "Success": "Success",
    "Failed": "Failed",
    "LoginTry": "Login try"
}