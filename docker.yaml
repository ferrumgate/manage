version: "3.9"

networks:
  ferrum:
    external: true

volumes:
  redis:
  redis-local:
  es:
  ferrum:
  lmdb:

services:
  prepare:
    image: alpine:3.17
    labels:
        Ferrum_Gateway_Id: "??GATEWAY_ID"
    profiles: ["single","multi"]
    command:
      - /bin/sh
      - -c
      - |
        CONF_FILE=/data/conf
        if [ ! -f $$CONF_FILE ];then
          echo "file does not exits"
          echo "Ferrum_Gateway_Id: "??GATEWAY_ID""> $$CONF_FILE
        fi
    networks:
      - ferrum
    volumes:
      - ferrum:/data
  redis:
    image: redis:7-bullseye
    labels:
        Ferrum_Gateway_Id: "??GATEWAY_ID"
    profiles: ["single"]
    command:
      - /bin/bash
      - -c
      - |
        CONF_FILE=/data/redis.conf
        if [ ! -f $$CONF_FILE ];then
          echo "file does not exits"
          cat > $$CONF_FILE << EOF
        requirepass ??REDIS_PASS
        protected-mode yes
        daemonize no
        tcp-backlog 511
        timeout 0
        tcp-keepalive 300
        maxclients 100000
        appendonly yes
        dir /data
        EOF
        else
          echo "conf file exists"
        fi
        redis-server $$CONF_FILE
    restart: always
    depends_on:
      - prepare
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    networks:
      - ferrum
    volumes:
      - redis:/data
    logging:
      driver: local

  redis-local:
    image: redis:7-bullseye
    labels:
        Ferrum_Gateway_Id: "??GATEWAY_ID"
    profiles: ["single","multi"]
    command:
      - /bin/bash
      - -c
      - |
        CONF_FILE=/data/redis.conf
        if [ ! -f $$CONF_FILE ];then
          echo "file does not exits"
          cat > $$CONF_FILE << EOF
        requirepass ??REDIS_PASS
        protected-mode yes
        daemonize no
        tcp-backlog 511
        timeout 0
        tcp-keepalive 300
        maxclients 100000
        appendonly yes
        dir /data
        EOF
        else
          echo "conf file exists"
        fi
        redis-server $$CONF_FILE
    restart: always
    depends_on:
      - prepare
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    networks:
      - ferrum
    volumes:
      - redis-local:/data
    logging:
      driver: local
  es:
    image: elasticsearch:8.5.0
    labels:
        Ferrum_Gateway_Id: "??GATEWAY_ID"    
    profiles: ["single"]
    restart: always
    environment:
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - ELASTIC_PASSWORD=??ES_PASS
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.ml.enabled=false
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    mem_limit: 2073741824
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - ferrum
    volumes:
      - es:/usr/share/elasticsearch/data
    logging:
      driver: local

  server-ssh:
    image: "??PRIVATE_REGISTRY/ferrumgate/secure.server.ssh:1.0.0"
    labels:
        Ferrum_Gateway_Id: "??GATEWAY_ID"
    profiles: ["single","multi"]
    restart: always
    ports:
      - "9999:9999"
    environment:
      - REDIS_HOST=redis#6379
      - REDIS_PASS=??REDIS_PASS
      - PORT=9999
      - GATEWAY_ID=??GATEWAY_ID
    cap_add:
      - NET_ADMIN
    depends_on:
      - redis
    extra_hosts:
      - "registry.ferrumgate.zero:192.168.88.40"
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    volumes:
      - /dev/net/tun:/dev/net/tun
      - /dev/urandom:/dev/urandom
      - ferrum:/etc/ferrumgate
    networks:
      - ferrum
    logging:
      driver: local

  admin:
    image: "??PRIVATE_REGISTRY/ferrumgate/job.admin:1.9.0"
    labels:
        Ferrum_Gateway_Id: "??GATEWAY_ID"
    profiles: ["single","mullti"]
    restart: always
    privileged: true
    #cap_add:
    #  - NET_ADMIN
    #  - MKNOD
    environment:
      - REDIS_HOST=redis:6379
      - REDIS_PASS=??REDIS_PASS
      - REDIS_LOCAL_HOST=redis-local:6379
      - REDIS_LOCAL_PASS=??REDIS_PASS
      - FERRUM_IO_IMAGE=??PRIVATE_REGISTRY/ferrumgate/ferrum.io:1.3.0
      - ENCRYPT_KEY=??ENCRYPT_KEY
      - GATEWAY_ID=??GATEWAY_ID
      - ES_HOST=http://es:9200
      - ES_USER=elastic
      - ES_PASS=??ES_PASS
      - LOG_LEVEL=??LOG_LEVEL
      - SYSLOG_HOST=log:9292
    depends_on:
      - redis
      - server-ssh
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    volumes:
      - ferrum:/etc/ferrumgate
      - lmdb:/var/lib/ferrumgate
      - /etc/docker:/etc/docker
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: service:server-ssh
    logging:
      driver: local

  ui:
    image: "??PRIVATE_REGISTRY/ferrumgate/ui.portal:1.9.0"
    labels:
        Ferrum_Gateway_Id: "??GATEWAY_ID"
    profiles: ["single","multi"]
    restart: always
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    networks:
      - ferrum
    logging:
      driver: local

  rest:
    image: "??PRIVATE_REGISTRY/ferrumgate/rest.portal:1.9.0"
    labels:
        Ferrum_Gateway_Id: "??GATEWAY_ID"
    profiles: ["single","multi"]
    restart: always
    ports:
      - 80:8181
      - 443:8443
    environment:
      - PORT=8181
      - REDIS_HOST=redis:6379
      - REDIS_PASS=??REDIS_PASS
      - REDIS_LOCAL_HOST=redis-local:6379
      - REDIS_LOCAL_PASS=??REDIS_PASS
      - BASE_RATE_LIMIT=25
      - ENCRYPT_KEY=??ENCRYPT_KEY
      - ES_HOST=http://es:9200
      - ES_USER=elastic
      - ES_PASS=??ES_PASS
      - GATEWAY_ID=??GATEWAY_ID
      - LOG_LEVEL=??LOG_LEVEL
      - STATIC_FOLDER=/usr/src/app/web
      - UI_HOST=ui:80
    depends_on:
      - redis-local
      - server-ssh
    deploy:
      restart_policy:
        delay: 5s
      mode: global
    volumes:
      - ferrum:/etc/ferrumgate
    networks:
      - ferrum
    logging:
      driver: local

  log:
    image: "??PRIVATE_REGISTRY/ferrumgate/job.log:1.8.0"
    profiles: ["single","multi"]
    restart: always
    environment:
      - REDIS_HOST=redis:6379
      - REDIS_PASS=??REDIS_PASS
      - REDIS_LOCAL_HOST=redis-local:6379
      - REDIS_LOCAL_PASS=??REDIS_PASS
      - ENCRYPT_KEY=??ENCRYPT_KEY
      - ES_HOST=http://es:9200
      - ES_USER=elastic
      - ES_PASS=??ES_PASS
      - GATEWAY_ID=??GATEWAY_ID
      - LOG_LEVEL=??LOG_LEVEL
      - MODULE_SYSLOG=true
      - MODULE_AUDIT_TO_ES=true
      - MODULE_ACTIVITY_TO_ES=true
      - MODULE_DEVICE_TO_ES=true
      - MODULE_ACTIVITY_SVC_PARSER=true
    depends_on:
      - redis
    deploy:
      mode: global
      restart_policy:
        delay: 5s
      labels:
        Ferrum_Gateway_Id: "??GATEWAY_ID"
    networks:
      - ferrum
    logging:
      driver: local

  task:
    image: "??PRIVATE_REGISTRY/ferrumgate/job.task:1.4.0"
    labels:
        Ferrum_Gateway_Id: "??GATEWAY_ID"
    profiles: ["single","multi"]
    restart: always
    environment:
      - REDIS_HOST=redis:6379
      - REDIS_PASS=??REDIS_PASS
      - REDIS_LOCAL_HOST=redis-local:6379
      - REDIS_LOCAL_PASS=??REDIS_PASS
      - ENCRYPT_KEY=??ENCRYPT_KEY
      - ES_HOST=http://es:9200
      - ES_USER=elastic
      - ES_PASS=??ES_PASS
      - GATEWAY_ID=??GATEWAY_ID
      - LOG_LEVEL=??LOG_LEVEL
      - MODULE_IP_INTELLIGENCE=true
    depends_on:
      - redis
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    networks:
      - ferrum
    logging:
      driver: local

 