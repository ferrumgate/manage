version: "3.9"
networks:
  ferrum:
    external: true

volumes:
  redis:
  es:
  ferrum:
  lmdb:

services:
  prepare:
    image: alpine:3.17
    command:
      - /bin/sh
      - -c
      - |
        CONF_FILE=/data/conf
        if [ ! -f $$CONF_FILE ];then
          echo "file does not exits"
          echo "gatewayId=??GATEWAY_ID"> $$CONF_FILE
        fi
    networks:
      - ferrum
    volumes:
      - ferrum:/data
  redis:
    image: redis:7-bullseye
    command:
      - /bin/bash
      - -c
      - |
        CONF_FILE=/data/redis.conf
        if [ ! -f $$CONF_FILE ];then
          echo "file does not exits"
          cat > $$CONF_FILE << EOF
        requirepass ??REDIS_PASS
        protected-mode yes
        daemonize no
        tcp-backlog 511
        timeout 0
        tcp-keepalive 300
        maxclients 100000
        appendonly yes
        dir /data
        EOF
        else
          echo "conf file exists"
        fi
        redis-server $$CONF_FILE
    restart: always
    depends_on:
      - prepare
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
      restart_policy:
        delay: 5s
    networks:
      - ferrum
    volumes:
      - redis:/data
    logging:
      driver: local

  es:
    image: elasticsearch:8.5.0
    restart: always
    environment:
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - ELASTIC_PASSWORD=??ES_PASS
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.ml.enabled=false
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
      restart_policy:
        delay: 5s
    mem_limit: 1073741824
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - ferrum
    volumes:
      - es:/usr/share/elasticsearch/data
    logging:
      driver: local

  server-ssh:
    image: "??PRIVATE_REGISTRY/ferrumgate/secure.server.ssh:1.0.0"
    restart: always
    ports:
      - "9999:9999"
    environment:
      - REDIS_HOST=redis#6379
      - REDIS_PASS=??REDIS_PASS
      - PORT=9999
      - GATEWAY_ID=??GATEWAY_ID
    cap_add:
      - NET_ADMIN
    depends_on:
      - redis
    extra_hosts:
      - "registry.ferrumgate.zero:192.168.88.40"
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    volumes:
      - /dev/net/tun:/dev/net/tun
      - /dev/urandom:/dev/urandom
      - ferrum:/etc/ferrumgate
    networks:
      - ferrum
    logging:
      driver: local

  admin:
    image: "??PRIVATE_REGISTRY/ferrumgate/job.admin:1.2.0"
    restart: always
    privileged: true
    #cap_add:
    #  - NET_ADMIN
    #  - MKNOD
    environment:
      - REDIS_HOST=redis:6379
      - REDIS_PASS=??REDIS_PASS
      - REDIS_SLAVE_HOST=redis:6379
      - REDIS_SLAVE_PASS=??REDIS_PASS
      - FERRUM_IO_IMAGE=??PRIVATE_REGISTRY/ferrumgate/ferrum.io:1.1.0
      - ENCRYPT_KEY=??ENCRYPT_KEY
      - GATEWAY_ID=??GATEWAY_ID
      - LOG_LEVEL=??LOG_LEVEL
      - SYSLOG_HOST=log:9292
    depends_on:
      - redis
      - server-ssh
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    volumes:
      - ferrum:/etc/ferrumgate
      - lmdb:/var/lib/ferrumgate
      - /etc/docker:/etc/docker
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: service:server-ssh
    logging:
      driver: local

  ui:
    image: "??PRIVATE_REGISTRY/ferrumgate/ui.portal:1.2.0"
    restart: always
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    networks:
      - ferrum
    logging:
      driver: local

  rest:
    image: "??PRIVATE_REGISTRY/ferrumgate/rest.portal:1.2.0"
    restart: always
    environment:
      - PORT=8181
      - REDIS_HOST=redis:6379
      - REDIS_PASS=??REDIS_PASS
      - REDIS_SLAVE_HOST=redis:6379
      - REDIS_SLAVE_PASS=??REDIS_PASS
      - BASE_RATE_LIMIT=25
      - ENCRYPT_KEY=??ENCRYPT_KEY
      - ES_HOST=http://es:9200
      - ES_USER=elastic
      - ES_PASS=??ES_PASS
      - GATEWAY_ID=??GATEWAY_ID
      - LOG_LEVEL=??LOG_LEVEL
    depends_on:
      - redis
      - server-ssh
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    volumes:
      - ferrum:/etc/ferrumgate
    networks:
      - ferrum
    logging:
      driver: local

  log:
    image: "??PRIVATE_REGISTRY/ferrumgate/job.log:1.1.0"
    restart: always
    environment:
      - REDIS_HOST=redis:6379
      - REDIS_PASS=??REDIS_PASS
      - ENCRYPT_KEY=??ENCRYPT_KEY
      - ES_HOST=http://es:9200
      - ES_USER=elastic
      - ES_PASS=??ES_PASS
      - GATEWAY_ID=??GATEWAY_ID
      - LOG_LEVEL=??LOG_LEVEL
      - MODULE_SYSLOG=true
      - MODULE_AUDIT_TO_ES=true
      - MODULE_ACTIVITY_TO_ES=true
      - MODULE_ACTIVITY_SVC_PARSER=true
    depends_on:
      - redis
    deploy:
      mode: global
      restart_policy:
        delay: 5s
    networks:
      - ferrum
    logging:
      driver: local

  nginx:
    image: nginx:1.23-alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    command:
      - /bin/sh
      - -c
      - |
        SSL_PUB=??SSL_PUB
        SSL_KEY=??SSL_KEY
        echo $$SSL_PUB|base64 -d > /etc/ssl/secure.ferrumgate.zero.crt
        echo $$SSL_KEY|base64 -d > /etc/ssl/secure.ferrumgate.zero.key
        CONF_FILE=/etc/nginx/nginx.conf

        cat > $$CONF_FILE << EOF
        user  nginx;
        worker_processes  auto;

        error_log  /dev/stdout notice;
        pid        /var/run/nginx.pid;


        events {
            worker_connections  1024;
        }


        http {
            include       /etc/nginx/mime.types;
            default_type  application/octet-stream;

            log_format  main  '\$$remote_addr - \$$remote_user [\$$time_local] "\$$request" '
                              '\$$status \$$body_bytes_sent "\$$http_referer" '
                              '"\$$http_user_agent" "\$$http_x_forwarded_for"';

            access_log  /dev/stdout  main;
            server_tokens off;
            sendfile        on;
            #tcp_nopush     on;

            keepalive_timeout  65;

            #gzip  on;

            include /etc/nginx/conf.d/*.conf;
        }
        EOF

        CONF_FILE=/etc/nginx/conf.d/default.conf

        cat > $$CONF_FILE << EOF
        server {
            listen       80;
            server_name  localhost;

            proxy_http_version 1.1;
            proxy_cache_bypass  \$$http_upgrade;
            proxy_set_header Upgrade           \$$http_upgrade;
            proxy_set_header Connection        "upgrade";
            proxy_set_header Host              \$$host;
            proxy_set_header X-Real-IP         \$$remote_addr;
            proxy_set_header X-Forwarded-For   \$$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$$scheme;
            proxy_set_header X-Forwarded-Host  \$$host;
            proxy_set_header X-Forwarded-Port  \$$server_port;

            location ^~/api {
                proxy_pass http://rest:8181;
                
            }
            
            location / {
                proxy_pass http://ui:80;
            }

        }
        server {
            listen       443 ssl;
            server_name  secure.ferrumgate.zero;
            ssl_certificate     /etc/ssl/secure.ferrumgate.zero.crt;
            ssl_certificate_key /etc/ssl/secure.ferrumgate.zero.key;
            ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
            ssl_ciphers         HIGH:!aNULL:!MD5;

            proxy_http_version 1.1;
            proxy_cache_bypass  \$$http_upgrade;
            proxy_set_header Upgrade           \$$http_upgrade;
            proxy_set_header Connection        "upgrade";
            proxy_set_header Host              \$$host;
            proxy_set_header X-Real-IP         \$$remote_addr;
            proxy_set_header X-Forwarded-For   \$$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$$scheme;
            proxy_set_header X-Forwarded-Host  \$$host;
            proxy_set_header X-Forwarded-Port  \$$server_port;

            location ^~/api {
                proxy_pass http://rest:8181;
                
            }
            
            location / {
                proxy_pass http://ui:80;
            }

        }
        EOF
         nginx -g 'daemon off;'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    depends_on:
      - rest
      - ui
    networks:
      - ferrum
    logging:
      driver: local
